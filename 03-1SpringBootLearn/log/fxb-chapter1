spring boot官方文档：
    我只是记录了一下，比较重要的东西。（我觉得重要）
    Spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。用我的话来理解，就是spring boot其实不是什么新的框架，它默认配置了很多框架的使用方式，就像maven整合了所有的jar包，spring boot整合了所有的框架（不知道这样比喻是否合适）。
    spring boot的目标：
        1.Be opinionated out of the box, but get out of the way quickly as requirements start to diverge from
          the defaults.
         为所有的spring产品提供一个快速的，方便的开发体验。
        2.Be opinionated out of the box, but get out of the way quickly as requirements start to diverge from
          the defaults.
        3.Provide a range of non-functional features that are common to large classes of projects (e.g.
        embedded servers, security, metrics, health checks, externalized configuration).
         提供一系列大类项目的非功能性的特点（如嵌入式服务器，安全，标准，健康检查，外部配置）。
        4.Absolutely no code generation and no requirement for XML configuration.
         不用生成代码，也不用xml配置。
    翻译如下：
         Spring Boot不生成代码，且完全不需要XML配置。其主要目标如下：
         - 为所有的Spring开发工作提供一个更快、更广泛的入门经验。
         - 开箱即用，你也可以通过修改默认值来快速满足你的项目的需求。
         - 提供了一系列大型项目中常见的非功能性特性，如嵌入式服务器、安全、指标，健康检测、外部配置等。


    要求：
        spring 2.0.0.BUILD-SNAPSHOT：
            这个版本需要java 8 或者更高的版本。
            spring FrameWord 5.0.0.RC4 或者更高。
            tomcat8.5 以上
            jetty 9.4
            Undertow 1.3
*********************************************************************************************
 &&第一个springboot案例：
    ----1.首先配置：pom.xml------------------------------------------

 <?xml version="1.0" encoding="UTF-8"?>
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <groupId>com.fxb.springBootLearn</groupId>
     <artifactId>SpringBootLearn</artifactId>
     <version>1.0.0</version>

     <parent>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-parent</artifactId>
         <version>1.4.0.BUILD-SNAPSHOT</version>
     </parent>

     <!-- Additional lines to be added here... -->
     <!-- (you don't need this if you are using a .RELEASE version) -->
     <repositories>
         <repository>
             <id>spring-snapshots</id>
             <url>http://repo.spring.io/snapshot</url>
             <snapshots>
                 <enabled>true</enabled>
             </snapshots>
             Spring Boot Reference Guide
             2.0.0.BUILD-SNAPSHOT Spring Boot 18
         </repository>
         <repository>
             <id>spring-milestones</id>
             <url>http://repo.spring.io/milestone</url>
         </repository>
     </repositories>
     <pluginRepositories>
         <pluginRepository>
             <id>spring-snapshots</id>
             <url>http://repo.spring.io/snapshot</url>
         </pluginRepository>
         <pluginRepository>
             <id>spring-milestones</id>
             <url>http://repo.spring.io/milestone</url>
         </pluginRepository>
     </pluginRepositories>
     <name>example-chapter1-HelloWorld Maven Webapp</name>
 </project>

-----------2.Example.java---------------------------------
@EnableAutoConfiguration
@RestController
public class Example {
    @RequestMapping("/")
    public String home(){
        return "Hello World,方小白,fighting";
    }
    public static void main(String[] args){
        SpringApplication.run(Example.class,args);
    }
}

3.运行这个java就可以了，debug或者run。不用启动tomcat啊。

如何做单元测试：


