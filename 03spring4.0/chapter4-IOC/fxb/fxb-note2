类装载器ClassLoader：
    1. 工作机制
        类加载器是寻找类的字节码文件并构造出类在JVM内部表示对象的组件。
        类装载器吧一个类装入jvm中，需要经过一下步骤：
            1.装载，查找和导入Class文件。
            2.链接：执行校验，准备和解析步骤，其中解析步骤是可以选择的。
                1.校验：检查载入Class文件数据的正确性。
                2.准备：给类的静态变量分配存储空间。
                3.解析：将符号引用转换成直接引用。
            3.初始化：对类的静态变量，静态代码块执行初始化工作。
        类装载器工作由ClassLoader及其子类负责，ClassLoader是一个重要的java运行时系统组件，它负责在运行时查找和装入Class字节码文件。
        JVM在运行时会产生3个ClassLoader：根装载器，ExtClassLoader(扩展类装载器)和AppClassLoader(应用类装载器)。
        这个类加载器是父子关系。

        jvm 装载类时，使用“全盘负责委托机制”，
            全盘负责是指当一个ClassLoader装载一个类时，除非显式的使用另一个ClassLoader
        该类锁依赖及引用的类也由这个ClassLoader载入。
            委托机制是指先委托父类装载器寻找目标类，只有在找不到的情况下才从自己的类路径中查找并装载目标类。

    2.ClassLoader中的方法：
        在java中，ClassLoader是一个java.lang下的抽象类。


    3.每个类在Jvm中都拥有一个对应的java.lang.Class对象，他提供了类结构信息的描述。数组，枚举，注解及基本的java类型。
    设置void都拥有对应的Class对象，CLass没有public的构造方法，Class对象是装载类时由JVM通过调用类装载器中的defineClass()方法自动构造的。

    4.由于JDK提供的访问资源的类的缺陷，Spring设计了Resource接口。
